name: Validate and Release

on:
  push:
    branches:
      - master

permissions:
  contents: write # grant permissions to create releases

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Tools
        run: |
          make --version
          nix --version
          docker version

      - name: Setup
        run: make nixshell

      - name: Lint
        run: make lint

      - name: Test
        run: make test
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN_FOR_TEST }}

  release:
    name: Release
    needs: validate
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --tags

      - name: Check Version
        id: check_version
        run: |
          set -euo pipefail

          echo "info: checking if VERSION file exists"
          if [ ! -f "VERSION" ]; then
            echo "info: VERSION file does not exist - skipping release"
            echo "changed=false" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "info: VERSION file exists"
          fi

          echo "info: checking if any tags exist"
          if [ "$(git tag | wc -l)" -eq 0 ]; then
            echo "info: first release detected - proceeding"
            echo "changed=true" >> "${GITHUB_OUTPUT}"
            exit 0
          else
            echo "info: tags exist"
          fi

          echo "info: checking for new version"
          CURR_VERSION="$(git describe --tags --abbrev=0 | sed 's/^v//')"
          NEXT_VERSION="$(cat VERSION | sed 's/^v//')"
          if [ "${NEXT_VERSION}" == "${CURR_VERSION}" ]; then
            echo "info: version has not changed - skipping release"
            echo "changed=false" >> "${GITHUB_OUTPUT}"
          else
            echo "info: detected version change - proceeding with release"
            echo "changed=true" >> "${GITHUB_OUTPUT}"
          fi

      - name: Get Version
        if: steps.check_version.outputs.changed == 'true'
        id: get_version
        run: VERSION="$(cat VERSION)" && echo "version=${VERSION}" >> "${GITHUB_OUTPUT}"

      - name: Check Release
        if: steps.check_version.outputs.changed == 'true'
        id: check_release
        run: |
          set -euo pipefail
          TAG="v${{ steps.get_version.outputs.version }}"
          if [ -z "$(git tag -l "${TAG}")" ]; then
            echo "info: tag ${TAG} does not exist ✅"
            exit 0
          else
            echo "error: tag ${TAG} already exists ❌"
            exit 1
          fi

      - name: Release
        if: steps.check_version.outputs.changed == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release v${{ steps.get_version.outputs.version }}"
          tag_name: "v${{ steps.get_version.outputs.version }}"
          token: "${{ secrets.GITHUB_TOKEN }}"
          generate_release_notes: true
          make_latest: true
          prerelease: false
          draft: false
